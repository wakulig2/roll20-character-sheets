.options.pc-col
	.pc-row
		.header.right-header
			h1(data-i18n='options')
			.right-tri
		.border-box
			.pc-box.grid.2column
				.col
					.row
						h2(data-i18n="character")
					each val in ['mundane', 'awakened', 'emerged']
						.row
							label.grid.2autocolumn.character-type(data-i18n-title=val)
								-const value = val == 'awakened' ? 'magic' : val == 'emerged' ? 'resonance' : 'mundane'
								h3(data-i18n=val)
								if val == 'mundane'
									input(class="character-type" type="checkbox" name="attr_flag_special" value=value title="@{flag_special}" checked)
								else
									input(class="character-type" type="checkbox" name="attr_flag_special" value=value title="@{flag_special}")
					hr
					.row
						h2(data-i18n="sheetselect")
					.row
						select(name="attr_sheet_type" title="@{sheet_type}" value='pc')
							each val in ['pc', 'grunt', 'host', 'sprite', 'vehicle']
								option(value=val data-i18n=val)
					hr
					.row
						h2(data-i18n="importer")
						button(type="action" name="act_import_launch" data-i18n="importecharacter")
						p(data-i18n="importertext")
				.col
					.row
						h2(data-i18n="temporarymodifiers")
					each val in ['defense', 'soak', 'body', 'agility', 'reaction', 'strength', 'willpower', 'logic', 'intuition', 'charisma', 'magic', 'resonance', 'initiative', 'initiative dice', 'physical limit', 'social limit', 'mental limit']
						.row
							.grid.temp
								-const i18n = removeSpace(val)
								-const attr = attrName(val)
								h3(data-i18n=i18n)
								label(data-i18n-title=i18n)
									input(type="number" name=`attr_${attr}_temp` title=`@{${attr}_temp}`)
								label(data-i18n-title='toggle on temporary bonus')
									input(type="checkbox" name=`attr_${attr}_temp_flag` value="on" checked)
						if ['soak', 'resonance', 'initiative dice'].includes(val)
							hr
