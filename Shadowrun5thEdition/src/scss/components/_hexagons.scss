/***** EDGE & MATRIX CONDITION HEXAGONS *****/
div.sheet-attribute {
	.sheet-hexagon {
		position: relative;
		width: 20px; 
		height: 11.55px;
		background-color: $blackish;
		margin: 7.22px 0;
	}
	
	.sheet-hexagon:before,
	.sheet-hexagon:after {
		content: "";
		position: absolute;
		width: 0;
		border-left: 10px solid transparent;
		border-right: 10px solid transparent;
	}
	
	.sheet-hexagon:before {
		bottom: 100%;
		border-bottom: 5.77px solid $blackish;
	}
	
	.sheet-hexagon:after {
		top: 100%;
		width: 0;
		border-top: 5.77px solid $blackish;
	}

	@mixin hexagon() {
		.sheet-hexagon {
			background-color: $lightgray;
		}
	
		.sheet-hexagon:before {
			border-bottom-color: $lightgray;
		}
	
		.sheet-hexagon:after {
			border-top-color: $lightgray;
		}
	}

	input.sheet-hex-highlight {
		&[value='0'] ~ div.sheet-edge:nth-of-type(1n+1) {
			@include hexagon();
		}

		@for $i from 1 through 8 {
			&[value='#{$i}'] ~ div.sheet-edge:nth-of-type(1n+#{$i+1}) {
				@include hexagon();
			}
		}
	}

	input[name="attr_edge_hex"]:checked + .sheet-hexagon {
		background-color: $blackish;
	}

	input[name="attr_edge_hex"]:checked + .sheet-hexagon:before  {
		border-bottom-color: $blackish;
	}
	
	input[name="attr_edge_hex"]:checked + .sheet-hexagon:after {
		border-top-color: $blackish;
	}
}

/* Old way of doing it */
div.sheet-matrix {
	.sheet-con-hex {
		position: relative;
		transition: transform .2s;
	}
	
	.sheet-con-hex input[type='radio'] {
		height      : 20px;
		margin-right: -21px;
		width       : 20px;
		opacity: 0;
		z-index: 2;
		position: absolute;
	
		&:hover + span {
			transform: $button-scale-medium;
		}
	}

	.sheet-hexagon {
		display: inline-block;
		margin: 5.77px 0;
		position: relative;
		background-color: $blackish;
		height: 11.55px;
		width: 20px; 
	}

	.sheet-hexagon:before,
	.sheet-hexagon:after {
		border-left : 10px solid transparent;
		border-right: 10px solid transparent;
		content     : '';
		position    : absolute;
		width       : 0;}

	.sheet-hexagon:before {
		bottom       : 100%;
		border-bottom: 5.77px solid $blackish;}

	.sheet-hexagon:after {
		top: 100%;
		width: 0;
		border-top: 5.77px solid $blackish;}

		/***** MAKE HEXES APPEAR & DISAPPEAR *****/
	.sheet-hex-hider[value='1'] ~ input[type='checkbox']:nth-child(1n+5),
	.sheet-hex-hider[value='1'] ~ input[type='checkbox']:nth-child(1n+5) + span,
	.sheet-hex-hider[value='2'] ~ input[type='checkbox']:nth-child(1n+7),
	.sheet-hex-hider[value='2'] ~ input[type='checkbox']:nth-child(1n+7) + span,
	.sheet-hex-hider[value='3'] ~ input[type='checkbox']:nth-child(1n+9),
	.sheet-hex-hider[value='3'] ~ input[type='checkbox']:nth-child(1n+9) + span,
	.sheet-hex-hider[value='4'] ~ input[type='checkbox']:nth-child(1n+11),
	.sheet-hex-hider[value='4'] ~ input[type='checkbox']:nth-child(1n+11) + span,
	.sheet-hex-hider[value='5'] ~ input[type='checkbox']:nth-child(1n+13),
	.sheet-hex-hider[value='5'] ~ input[type='checkbox']:nth-child(1n+13) + span,
	.sheet-hex-hider[value='6'] ~ input[type='checkbox']:nth-child(1n+15),
	.sheet-hex-hider[value='6'] ~ input[type='checkbox']:nth-child(1n+15) + span,		
	.sheet-hex-hider[value='7'] ~ input[type='checkbox']:nth-child(1n+17),
	.sheet-hex-hider[value='7'] ~ input[type='checkbox']:nth-child(1n+17) + span {
		display: none;
	}
	
	.sheet-con-hex input[type='radio']:checked ~ .sheet-hexagon {
		background-color: $lightgray;
	}

	.sheet-con-hex input[type='radio']:checked ~ .sheet-hexagon:before {
		border-bottom-color: $lightgray;
	}

	.sheet-con-hex input[type='radio']:checked ~ .sheet-hexagon:after {
		border-top-color: $lightgray;
	}

	.sheet-con-hex input[type='radio']:checked + .sheet-hexagon {
		background-color: $blackish;
	}

	.sheet-con-hex input[type='radio']:checked + .sheet-hexagon:before  {
		border-bottom-color: $blackish;
	}
	
	.sheet-con-hex input[type='radio']:checked + .sheet-hexagon:after {
		border-top-color: $blackish;
	}
}
